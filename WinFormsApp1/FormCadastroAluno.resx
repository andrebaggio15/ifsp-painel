<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAADAkAAAJNU0Z0AUkBTAIBAQIB
        AAEQAQABEAEAARgBAAEYAQAD/wEAASEBAAj/AUIBTQE2BwABNgMAASgDAAFgAwABGAMAAQEBAAEgBgAB
        JBIAAwUBBgMAAf8DAAH/AwAB/wMcASdUAANAAXcDQAG5A0ABuQNAAbkDQAG5A0ABuQNAAbkDQAG5A0AB
        uQNAAbkDQAG5A0ABuQNAAbkDQAG5A0ABuQNEAZnYAAMwAdUDAgH+BAADMAHXAwAB/wMcASdMAAMdAeoD
        RQGfAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkD
        OQFhAwAB/9QAAyQB5AMOAfcIAAMwAdcDAAH/Ax0BKEsAAf8nAAH/Ax0B6wM5AWMQAAM9AcADHQEp0AAD
        EgEYAwAB/wMwAdYIAAMwAdcDAAH/AxwBJ0cAAf8kAAMoAeADHAEnA0QBkwMAAf8DDgH2CAADQwGvAyQB
        NNQAAx0BKAMAAf8DMAHWCAADMAHXAwAB/wMcASdDAAH/JAADMwFTA0QBpAM4AV4DCAH6Az4BcQMOAfcE
        AANDAa8DJAE02AADHQEoAwAB/wMwAdYIAAMwAdcDAAH/Ax0BKD8AAf8rAAH/AwgB+ggAAz4BcQMOAfYD
        QwGvAyQBNNwAAx0BKAMAAf8DMAHWCAADMAHXAwAB/wMcASc7AAH/BwAB/wMAAf8DAAH/A0UBmAMLAQ4D
        PQFuAz0BbgM9AW4EAAMXAe4DRAGJDAADPgFxAwAB/wMkATTgAAMdASgDAAH/AzAB1wgAAzAB1wMAAf8D
        HAEnBAAEAQM8AWoDQwGtA0MBrwM/AXYDBgEHGwAB/wQAAxMB8wQAAyoBQANFAaEDDAEQAz8BdgM/AXYD
        PwF2CAADFwHuA0QBiQwAAz4BcQMOAfbkAAMdASgDAAH/AzAB1wgAAzAB1wMAAf8DDAH4AwAB/wMAAf8D
        AAH/AwAB/wMAAf8DAAH/AwIB/gMbASUTAAH/BAADEwHzBAADKgFAA0UBoQMZASIDRAGmA0QBpgNEAaYD
        RAGmAz0BbAQAAxcB7gNEAYkMAAM+AXEDDgH25AADHQEoAwAB/wMwAdYEAAM2AVoDAAH/AwgB+gMYASEQ
        AAMLAQ4DHQHqAwAB/wNFAZQPAAH/BwAB/wMAAf8DAAH/A0QBjAMCAQMDKQE+AykBPgMpAT4DKQE+AxQB
        GwgAAxcB7gNEAYkMAAM+AXEDDgH25AADHQEoAwAB/wMqAd0DAAH/A0QBpyAAAzwBawMAAf8DQAF4CwAB
        /zgAAxcB7gNEAYkIAAQBAwAB/wMOAffkAAMdASgDAAH/AzcBzSgAA0QBjgMAAf8DAgEDBwAB/wQAAxQB
        8QMUAfEDFAHxAzwBaSgAAxcB7gNEAYkEAQMAAf8DHwEsA0QBlgNBAXzgAANDAYYDAAH/MwAB/wM3AcsH
        AAH/BAADEwHzBAADKgFAA0UBoQMpAT4DJAHlAyQB5QMkAeUDBAEFGAADFgHvAwAB/wMfASwEAAMpAT4D
        RAGs4wAB/wM9AcEwAANBAXsDAAH/BwAB/wQAAxMB8wQAAyoBQANFAaEEAQMmATgDJgE4AyYBOAMmATgD
        EQEWFAADQwGvAwQB/ANEAawDMgFQAwAB/wMLAQ7jAAH/Ay4BSDAAAwUBBgMAAf8HAAH/BwAB/wMAAf8D
        AAH/A0UBoAMbASUDRAGsA0QBrANEAawDRAGsAz8BchQAA0MBrwMlATYDPAFpA0UBoAMKAQ3nAAH/AxUB
        HTcAAf8HAAH/QAADQwGvAyUBNvMAAf8DKQE+MAAEAQMAAf8HAAH/BAADQwGGA0MBhgNDAYYDHQEoLAAD
        QwGvAyUBNvMAAf8DRAGrMAADOgFlAwAB/wcAAf8EAAMOAfcDOAFeA0MBhgNFAaEDPAFoAwAB/wMAAf8D
        AAH/AwkBDAwAA0IBgQNEAaMDRAGjAyYB4gMlATbwAANEAaIDAAH/CAADPQHBAyUB4xAAA0UBnQMCAf4I
        AAMCAf4DJAHkBwAB/wQAAxMB8wQAAyoBQANFAaEfAAH/A0EBfAMqAUADRAGMAwIB/vsAAf8DRQGgBAAD
        FAEbAwAB/wMAAf8DEwHyAyQB5AMAAf8DAAH/AzkBYgQAAzYBWgMAAf8DDAEPBwAB/wQAAwQB/QMwAdcD
        JwHhA0UBoQM1AVcDAAH/AwAB/wMAAf8DAAH/AzQB0AMVAR0DNAHQBAADMAFMAwIB/vwAAzwBaQMAAf8D
        OQFjCAADPwF0AyEB5gMUAfEDRQGXBAEEAAMjATIDAAH/A0MBrQsAAf8EAAMLAQ4DCwEOAwsBDhwAAx4B
        KgM+AbsDMAFMAwIB/v8ABQADRQGbAwAB/wMwAdcEARQAA0IBswMAAf8DNwHNDwAB/ywAAx4BKgMgAecD
        AgH+/wANAAMmATgDAAH/AwAB/wMAAf8DJwHhAyoB3QMAAf8DAAH/AwAB/wM5AWIQAAMmATgDAAH/AwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DBAH9/wAZAAMeASoDQwGvAxQB
        8QMRAfQDPgG8AyoBQP8ANQABQgFNAT4HAAE+AwABKAMAAWADAAEYAwABAQEAAQEFAAEgAQEWAAP/AQAB
        BwL/AcABAAE/BgABIwL/AYABAAEfBgABMQL/Ab8B4wHPBgABGAL/Ab8B4AHPBgABjAF/Af8BvwHgAU8G
        AAHGAT8B/wG/AfMBDwYAAeMBHwH/AaABEwGPBgAB8QGIAR8BqAEZAc8GAAH4AcABBwGoAQQB5wYAAfwB
        QwHDAaABBgFzBgAB/gEPAfEBvwH/ATEGAAH/AR8B+AGhAf8BgAYAAf8BPwH8AagBDwHEBgAB/wE/AfwB
        qAEHAcAGAAH/AT8B/AGgAQcBwQYAAf8BPwH+Ab8B/wHPBgAB/wE/AfwBoQH/Ac8GAAH/AT8B/AGgAQ4B
        DwYAAf8BMwHMAakB/AEfBgAB/wGQAQgBoAEBAT8GAAH/AYwBEQGjAfgBfwYAAf8BwwHjAb8B+AH/BgAB
        /wHgAQcBgAEBAf8GAAH/AfgBHwP/BgAL
</value>
  </data>
</root>